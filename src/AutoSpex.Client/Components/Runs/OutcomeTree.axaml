<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:components="using:AutoSpex.Client.Components">

    <Design.PreviewWith>
        <components:OutcomeTree Run="{x:Static components:DesignData.RunObserver}" Width="800" Height="300" />
    </Design.PreviewWith>

    <ControlTheme x:Key="OutcomeTreeItemTheme" TargetType="TreeViewItem" BasedOn="{a:ControlTheme TreeViewItem}">
        <Setter Property="BorderThickness" Value="3 0 0 0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />

        <Style Selector="^:empty /template/ ToggleButton">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="^:pointerover /template/ Border#border:pointerover">
            <Setter Property="Background" Value="{a:ThemeResource ListItemBackgroundBrushPointerOver}" />
            <Setter Property="BorderBrush" Value="{a:ThemeResource Container4BorderBrush}" />
        </Style>
        <Style Selector="^:disabled /template/ Border#border">
            <Setter Property="TextElement.Foreground" Value="{a:ThemeResource ListItemForegroundBrushDisabled}" />
            <Setter Property="Opacity" Value="{a:ThemeResource EditWatermarkOpacity}" />
        </Style>
        <Style Selector="^:selected /template/ Border#border">
            <Setter Property="Background" Value="{a:ThemeResource ListItemBackgroundBrushPointerOver}" />
            <Setter Property="BorderBrush" Value="{a:ThemeResource ControlBackgroundBrushSolidAccent}" />
            <Setter Property="TextElement.Foreground" Value="{a:ThemeResource ControlForegroundBrushOutlineAccent}" />

            <Style Selector="^:focus-within">
                <Setter Property="Background" Value="{a:ThemeResource ListItemBackgroundBrushPointerOver}" />
            </Style>
        </Style>


    </ControlTheme>

    <ControlTheme x:Key="{x:Type components:OutcomeTree}" TargetType="components:OutcomeTree">
        <Setter Property="Background" Value="{a:ThemeResource Container1BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border
                    x:Name="PART_RootBorder"
                    DragDrop.AllowDrop="True"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Padding="{TemplateBinding Padding}">
                    <Panel>
                        <components:DefaultMessage
                            HeaderIcon="{StaticResource IconRunThemed}"
                            HeaderText="No run defined"
                            CustomMessage="Drag a spec, source, or container from the tree to create a new run."
                            IsVisible="{Binding Run, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNull}}" />

                        <components:DefaultMessage
                            HeaderIcon="{StaticResource IconSpecThemed}"
                            HeaderText="No specs configured"
                            CustomMessage="Drag a spec, source, or container from the tree to add content.">
                            <components:DefaultMessage.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding
                                        Path="Run"
                                        RelativeSource="{RelativeSource TemplatedParent}"
                                        Converter="{x:Static ObjectConverters.IsNotNull}" />
                                    <Binding
                                        Path="!Run.Outcomes.Count"
                                        RelativeSource="{RelativeSource TemplatedParent}"
                                        FallbackValue="{x:False}" />
                                </MultiBinding>
                            </components:DefaultMessage.IsVisible>
                        </components:DefaultMessage>

                        <TreeView
                            x:Name="ResultTree"
                            ItemsSource="{Binding OutcomeCollection, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemContainerTheme="{StaticResource OutcomeTreeItemTheme}"
                            SelectedItems="{Binding Run.Selected, RelativeSource={RelativeSource TemplatedParent}, FallbackValue={x:Null}}"
                            SelectionMode="Multiple"
                            Classes="theme-scroll-overlay"
                            Background="Transparent"
                            BorderThickness="0">
                            <TreeView.DataTemplates>
                                <StaticResource ResourceKey="OutcomeTreeItem" />
                                <StaticResource ResourceKey="EvaluationTreeItem" />
                            </TreeView.DataTemplates>
                            <TreeView.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding
                                        Path="Run"
                                        RelativeSource="{RelativeSource TemplatedParent}"
                                        Converter="{x:Static ObjectConverters.IsNotNull}" />
                                    <Binding
                                        Path="Run.Outcomes.Count"
                                        RelativeSource="{RelativeSource TemplatedParent}"
                                        FallbackValue="{x:False}" />
                                </MultiBinding>
                            </TreeView.IsVisible>
                        </TreeView>
                    </Panel>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:dragover /template/ Border#PART_RootBorder">
            <Setter Property="BorderBrush" Value="{a:ThemeResource ControlBackgroundBrushEmphasizedAccent}" />
            <Setter Property="Background" Value="{a:ThemeResource ControlBackgroundBrushSoftAccent}" />
            <Setter Property="Opacity" Value="0.1" />
        </Style>
    </ControlTheme>
</ResourceDictionary>