<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:observers="clr-namespace:AutoSpex.Client.Observers"
                    xmlns:components="clr-namespace:AutoSpex.Client.Components"
                    xmlns:controls="clr-namespace:AutoSpex.Client.Resources.Controls"
                    xmlns:properties="clr-namespace:AutoSpex.Client.Resources.Properties"
                    xmlns:engine="clr-namespace:AutoSpex.Engine;assembly=AutoSpex.Engine">

    <Design.PreviewWith>
        <ListBox
            Margin="20" Width="700" Height="300"
            ItemsSource="{x:Static components:TestData.DefaultOutcomes}"
            ItemTemplate="{DynamicResource OutcomeListItem}"
            ItemContainerTheme="{DynamicResource ListBoxItemEntry}"
            BorderBrush="{a:ThemeResource Container1BorderBrush}"
            BorderThickness="1" CornerRadius="5" VerticalAlignment="Top" />
    </Design.PreviewWith>

    <DataTemplate x:Key="OutcomeListItem" x:DataType="observers:OutcomeObserver">

        <Border x:Name="Border"
                Background="Transparent"
                Focusable="True"
                IsTabStop="False"
                Padding="{a:ThemeResource ListItemPadding}">

            <Interaction.Behaviors>
                <ExecuteCommandOnKeyDownBehavior
                    Key="Delete"
                    Command="{Binding DeleteSelectedCommand}"
                    MarkAsHandled="True" />
            </Interaction.Behaviors>

            <Border.ContextFlyout>
                <MenuFlyout
                    ItemsSource="{Binding ContextItems}"
                    ItemContainerTheme="{StaticResource MenuActionItem}"
                    Placement="Pointer" />
            </Border.ContextFlyout>

            <Grid ColumnDefinitions="*,Auto,Auto">

                <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="10">

                    <PathIcon
                        Theme="{Binding Result, Converter={StaticResource ResultStateIconConverter}}"
                        Classes.spinning="{Binding Result, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Pending}}">

                        <PathIcon.Styles>
                            <Style Selector="PathIcon.spinning">
                                <Style.Animations>
                                    <Animation Duration="0:0:1" IterationCount="INFINITE">
                                        <KeyFrame Cue="0%">
                                            <Setter Property="RotateTransform.Angle" Value="0" />
                                        </KeyFrame>
                                        <KeyFrame Cue="100%">
                                            <Setter Property="RotateTransform.Angle" Value="360" />
                                        </KeyFrame>
                                    </Animation>
                                </Style.Animations>
                            </Style>
                        </PathIcon.Styles>
                    </PathIcon>

                    <ContentControl
                        Content="{Binding}"
                        ContentTemplate="{StaticResource ObserverLink}" />

                    <controls:HighlightableTextBlock
                        Text="{Binding Node.Model.Route, FallbackValue='Node not found'}"
                        Foreground="{a:ThemeResource DefaultForegroundBrushDisabled}"
                        HighlightedText="{Binding FilterText}"
                        ToolTip.Tip="{Binding Node.Model.Route, FallbackValue='Node not found'}" />

                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="10" Margin="20 0" ClipToBounds="True">

                    <StackPanel Orientation="Horizontal" Spacing="5" IsVisible="{Binding Passed}">
                        <PathIcon Theme="{StaticResource IconThemedPassed}" Classes="size-sm" />
                        <TextBlock Text="{Binding Passed}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Spacing="5" IsVisible="{Binding Failed}">
                        <PathIcon Theme="{StaticResource IconThemedFailed}" Classes="size-sm" />
                        <TextBlock Text="{Binding Failed}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Spacing="5" IsVisible="{Binding Errored}">
                        <PathIcon Theme="{StaticResource IconThemedError}" Classes="size-sm" />
                        <TextBlock Text="{Binding Errored}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Spacing="2">
                        <PathIcon Theme="{StaticResource IconLineStopwatch}" Classes="size-sm accent" Margin="4 0" />
                        <TextBlock Text="{Binding Duration}" />
                        <TextBlock Text="ms" Foreground="{a:ThemeResource DefaultForegroundBrushDisabled}" />
                    </StackPanel>

                </StackPanel>

                <Button
                    Grid.Column="2"
                    Command="{Binding Node.NavigateCommand, FallbackValue={x:Null}}"
                    IsEnabled="{Binding Node, Converter={x:Static ObjectConverters.IsNotNull}}"
                    Theme="{StaticResource IconButtonSmall}"
                    properties:Icon.Theme="{StaticResource IconLineLaunch}"
                    ToolTip.Tip="Open Spec" />

            </Grid>
        </Border>

    </DataTemplate>
</ResourceDictionary>