<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:observers="clr-namespace:AutoSpex.Client.Observers"
                    xmlns:components="clr-namespace:AutoSpex.Client.Components"
                    xmlns:controls="clr-namespace:AutoSpex.Client.Resources.Controls"
                    xmlns:properties="clr-namespace:AutoSpex.Client.Resources.Properties"
                    xmlns:engine="clr-namespace:AutoSpex.Engine;assembly=AutoSpex.Engine">

    <Design.PreviewWith>
        <ListBox
            Margin="20" Width="700" Height="300"
            ItemsSource="{x:Static components:TestData.DefaultOutcomes}"
            ItemTemplate="{DynamicResource OutcomeListItem}"
            ItemContainerTheme="{DynamicResource ListBoxItemEntry}"
            BorderBrush="{a:ThemeResource Container1BorderBrush}"
            BorderThickness="1" CornerRadius="5" VerticalAlignment="Top" />
    </Design.PreviewWith>

    <DataTemplate x:Key="OutcomeListItem" x:DataType="observers:OutcomeObserver">

        <Border x:Name="Border"
                Background="Transparent"
                Focusable="True"
                IsTabStop="False"
                Padding="{a:ThemeResource ListItemPadding}">

            <Interaction.Behaviors>
                <ExecuteCommandOnKeyDownBehavior
                    Key="Delete"
                    Command="{Binding DeleteSelectedCommand}"
                    MarkAsHandled="True" />
            </Interaction.Behaviors>

            <Border.ContextFlyout>
                <MenuFlyout
                    ItemsSource="{Binding ContextItems}"
                    ItemContainerTheme="{StaticResource MenuActionItem}"
                    Placement="Pointer" />
            </Border.ContextFlyout>

            <Grid ColumnDefinitions="*,Auto">

                <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="10">

                    <PathIcon
                        Theme="{Binding Result, Converter={StaticResource ResultStateIconConverter}}"
                        Classes.spinning="{Binding Result, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Pending}}">

                        <PathIcon.Styles>
                            <Style Selector="PathIcon.spinning">
                                <Style.Animations>
                                    <Animation Duration="0:0:1" IterationCount="INFINITE">
                                        <KeyFrame Cue="0%">
                                            <Setter Property="RotateTransform.Angle" Value="0" />
                                        </KeyFrame>
                                        <KeyFrame Cue="100%">
                                            <Setter Property="RotateTransform.Angle" Value="360" />
                                        </KeyFrame>
                                    </Animation>
                                </Style.Animations>
                            </Style>
                        </PathIcon.Styles>
                    </PathIcon>

                    <controls:HighlightableTextBlock
                        Text="{Binding Name}"
                        HighlightedText="{Binding FilterText}"
                        FontWeight="{a:ThemeResource HeadingFontWeightMedium}" />

                    <controls:HighlightableTextBlock
                        Text="{Binding Node.Model.Route, FallbackValue='Spec not found'}"
                        Foreground="{a:ThemeResource DefaultForegroundBrushDisabled}"
                        HighlightedText="{Binding FilterText}"
                        ToolTip.Tip="{Binding Node.Model.Route, FallbackValue='The spec that produced this result no longer exists'}" />

                </StackPanel>

                <StackPanel Grid.Column="1"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal"
                            Spacing="20"
                            MinHeight="20"
                            IsVisible="{Binding !$parent[ListBoxItem].IsPointerOver}">

                    <TextBlock Text="{Binding Time}" Classes="faint" />
                    <TextBlock Text="{Binding Percent}" Classes="faint" />

                </StackPanel>

                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Spacing="10"
                            IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}">

                    <Button
                        IsEnabled="{Binding Result.IsSuppressible, FallbackValue={x:False}}"
                        Theme="{StaticResource IconButtonSmall}"
                        properties:Icon.Theme="{StaticResource IconLineBan}"
                        ToolTip.Tip="Add Suppression"
                        ToolTip.Placement="BottomEdgeAlignedRight">
                        <Button.Flyout>
                            <Flyout
                                Placement="BottomEdgeAlignedRight"
                                HorizontalOffset="8"
                                VerticalOffset="2">
                                <ContentControl
                                    Content="{Binding }"
                                    ContentTemplate="{StaticResource OutcomeSuppressor}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button
                        Theme="{StaticResource IconButtonSmall}"
                        properties:Icon.Theme="{StaticResource IconFilledCog}"
                        ToolTip.Tip="Override" />

                    <Button
                        Command="{Binding Node.NavigateCommand, FallbackValue={x:Null}}"
                        Theme="{StaticResource IconButtonSmall}"
                        properties:Icon.Theme="{StaticResource IconLineLaunch}"
                        ToolTip.Tip="Open" />

                </StackPanel>


            </Grid>
        </Border>

    </DataTemplate>
</ResourceDictionary>