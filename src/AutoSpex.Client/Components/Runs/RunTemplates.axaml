<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:components="clr-namespace:AutoSpex.Client.Components"
                    xmlns:observers="clr-namespace:AutoSpex.Client.Observers"
                    xmlns:properties="clr-namespace:AutoSpex.Client.Resources.Properties"
                    xmlns:engine="clr-namespace:AutoSpex.Engine;assembly=AutoSpex.Engine"
                    xmlns:controls="clr-namespace:AutoSpex.Client.Resources.Controls">

    <Design.PreviewWith>
        <Border Background="{a:ThemeResource Container1BackgroundBrush}"
                Width="1000" Height="400" Padding="30">
            <StackPanel Spacing="20">
               
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <!--RunSummary-->
    <DataTemplate x:Key="RunSummary" x:DataType="observers:RunObserver">
        <StackPanel Orientation="Horizontal" Spacing="10">
            <StackPanel.Styles>
                <Style Selector="TextBlock">
                    <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeSmall}" />
                    <Style Selector="^.offset">
                        <Setter Property="Padding" Value="0 0 0 1" />
                    </Style>
                    <Style Selector="^.caption">
                        <Setter Property="Foreground" Value="{a:ThemeResource DefaultForegroundBrushDisabled}" />
                        <Setter Property="Padding" Value="0 0 0 2" />
                    </Style>
                </Style>
                <Style Selector="PathIcon">
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Padding" Value="1" />
                </Style>
                <Style Selector="ToggleButton">
                    <Setter Property="Theme" Value="{StaticResource ToggleButtonFaint}" />
                    <Setter Property="Padding" Value="3" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </StackPanel.Styles>

            <StackPanel Orientation="Horizontal" Spacing="5">
                <!--<components:ResultPill Result="{Binding Result}" />-->
                <TextBlock Text="on" Classes="caption" />
                <TextBlock Text="{Binding RanOn, StringFormat='MM/dd/yyyy HH:mm:ss'}" />
                <TextBlock Text="by" Classes="caption" />
                <TextBlock Text="{Binding RanBy}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Spacing="5">
                <StackPanel Orientation="Horizontal" Spacing="3">
                    <PathIcon Theme="{StaticResource IconStopwatch}" Classes="accent" />
                    <TextBlock Text="{Binding Duration}" />
                    <TextBlock Text="ms" Classes="caption" />
                    <ToolTip.Tip>Duration</ToolTip.Tip>
                </StackPanel>

                <TextBlock Text="/" Margin="0 0 0 1" Classes="caption" />

                <StackPanel Orientation="Horizontal" Spacing="3">
                    <PathIcon Theme="{StaticResource IconStopwatch}" Classes="accent" />
                    <TextBlock Text="{Binding Average}" />
                    <TextBlock Text="ms" Classes="caption" />
                    <ToolTip.Tip>Average</ToolTip.Tip>
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Spacing="5">
                <ToggleButton
                    IsVisible="{Binding Ran}"
                    IsChecked="{Binding ResultFilter, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.None}}"
                    Command="{Binding ApplyResultFilterCommand}"
                    CommandParameter="{x:Static engine:ResultState.None}">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <PathIcon Theme="{StaticResource IconPlayCircle}" Margin="0 1 0 0" />
                        <TextBlock Text="{Binding Ran}" />
                    </StackPanel>
                </ToggleButton>

                <ToggleButton
                    IsVisible="{Binding Passed}"
                    IsChecked="{Binding ResultFilter, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Passed}}"
                    Command="{Binding ApplyResultFilterCommand}"
                    CommandParameter="{x:Static engine:ResultState.Passed}">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <PathIcon Theme="{StaticResource IconThemedPassed}" Margin="0 1 0 0" />
                        <TextBlock Text="{Binding Passed}" />
                    </StackPanel>
                </ToggleButton>

                <ToggleButton
                    IsVisible="{Binding Failed}"
                    IsChecked="{Binding ResultFilter, Mode=TwoWay, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Failed}}"
                    Command="{Binding ApplyResultFilterCommand}"
                    CommandParameter="{x:Static engine:ResultState.Failed}">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <PathIcon Theme="{StaticResource IconThemedFailed}" Margin="0 1 0 0" />
                        <TextBlock Text="{Binding Failed}" />
                    </StackPanel>
                </ToggleButton>

                <ToggleButton
                    IsVisible="{Binding Error}"
                    IsChecked="{Binding ResultFilter, Mode=TwoWay, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Error}}"
                    Command="{Binding ApplyResultFilterCommand}"
                    CommandParameter="{x:Static engine:ResultState.Error}">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <PathIcon Theme="{StaticResource IconThemedError}" Margin="0 1 0 0" />
                        <TextBlock Text="{Binding Error}" />
                    </StackPanel>
                </ToggleButton>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!--OutcomeTreeItem-->
    <TreeDataTemplate x:Key="OutcomeTreeItem" DataType="observers:OutcomeObserver" ItemsSource="{Binding Verifications}">
        <DockPanel LastChildFill="False">
            <DockPanel.Styles>
                <Style Selector="controls|HighlightableTextBlock">
                    <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeSmall}" />
                    <Setter Property="TextWrapping" Value="NoWrap" />
                </Style>
                <Style Selector="TextBlock">
                    <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeSmall}" />
                    <Setter Property="TextWrapping" Value="NoWrap" />
                </Style>
                <Style Selector="PathIcon">
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Padding" Value="1" />
                </Style>
            </DockPanel.Styles>

            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Spacing="10">

                <PathIcon Theme="{Binding Result, Converter={StaticResource ResultStateToIconConverter}}" />

                <StackPanel Orientation="Horizontal" Spacing="5">
                    <PathIcon Theme="{StaticResource IconThemedSpec}" />
                    <Panel>
                        <TextBlock
                            Text="Drag spec to add"
                            IsVisible="{Binding Name, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                            Opacity="{a:ThemeResource EditWatermarkOpacity}"
                            FontStyle="Italic" />
                        <controls:HighlightableTextBlock
                            Text="{Binding Name}"
                            HighlightedText="{Binding FilterText}"
                            IsVisible="{Binding Name, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                    </Panel>
                    <ToolTip.Tip>Spec</ToolTip.Tip>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Spacing="3"
                            IsVisible="{Binding Result, Converter={StaticResource NotEqualToConverter}, ConverterParameter={x:Static engine:ResultState.None}}">
                    <PathIcon Theme="{StaticResource IconStopwatch}" Classes="accent" />
                    <TextBlock Text="{Binding Duration}" />
                    <TextBlock Text="ms" Foreground="{a:ThemeResource DefaultForegroundBrushDisabled}" />
                    <ToolTip.Tip>Duration</ToolTip.Tip>
                </StackPanel>

                <controls:HighlightableTextBlock
                    Text="{Binding Result}"
                    HighlightedText="{Binding FilterText}"
                    IsVisible="{Binding Result, Converter={StaticResource NotEqualToConverter}, ConverterParameter={x:Static engine:ResultState.None}}"
                    Classes.accent="{Binding Result, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Pending}}"
                    Classes.success="{Binding Result, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Passed}}"
                    Classes.danger="{Binding Result, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Failed}}"
                    Classes.warning="{Binding Result, Converter={StaticResource EqualToConverter}, ConverterParameter={x:Static engine:ResultState.Error}}"
                    ToolTip.Tip="Result" />
            </StackPanel>

            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Spacing="5">
                <controls:HighlightableTextBlock
                    Text="{Binding Path}"
                    HighlightedText="{Binding FilterText}"
                    Foreground="{a:ThemeResource DefaultForegroundBrushTertiary}" />
            </StackPanel>
        </DockPanel>
    </TreeDataTemplate>

    <!--EvaluationTreeItem-->
    <TreeDataTemplate x:Key="EvaluationTreeItem" x:DataType="observers:EvaluationObserver">
        <DockPanel LastChildFill="False">
            <DockPanel.Styles>
                <Style Selector="controls|HighlightableTextBlock">
                    <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeSmall}" />
                    <Setter Property="TextWrapping" Value="NoWrap" />
                    <Setter Property="HighlightedText" Value="{Binding FilterText}" />
                    <Style Selector="^.criteria">
                        <Setter Property="Foreground" Value="{a:ThemeResource DefaultForegroundBrushTertiary}" />
                    </Style>
                    <Style Selector="^.value">
                        <Setter Property="Foreground" Value="{DynamicResource TypeGroupForegroundBrushText}" />
                    </Style>
                </Style>
                <Style Selector="TextBlock">
                    <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeSmall}" />
                    <Setter Property="Foreground" Value="{a:ThemeResource DefaultForegroundBrushDisabled}" />
                </Style>
                <Style Selector="PathIcon">
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Padding" Value="1" />
                </Style>
            </DockPanel.Styles>

            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Spacing="5">
                <PathIcon Theme="{Binding Result, Converter={StaticResource ResultStateToIconConverter}}" />
                <TextBlock Text="Expected" />
                <controls:HighlightableTextBlock Text="{Binding Criteria}" Classes="criteria" />
                <controls:HighlightableTextBlock Text="{Binding Expected}" />
                <TextBlock Text="Found" />
                <controls:HighlightableTextBlock
                    Text="{Binding Actual}"
                    IsVisible="{Binding Actual, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                <controls:HighlightableTextBlock
                    Text="{Binding Error}"
                    IsVisible="{Binding Actual, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                    Foreground="{a:ThemeResource ControlForegroundBrushOutlineWarning}" />
            </StackPanel>

            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Spacing="5" Margin="10 0">
            </StackPanel>
        </DockPanel>
    </TreeDataTemplate>
</ResourceDictionary>