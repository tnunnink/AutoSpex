<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:observers="clr-namespace:AutoSpex.Client.Observers"
                    xmlns:controls="clr-namespace:AutoSpex.Client.Resources.Controls"
                    xmlns:components="clr-namespace:AutoSpex.Client.Components">
    
    <Design.PreviewWith>
        <StackPanel Width="300" Height="400">
            <TreeView
                ItemsSource="{x:Static components:DesignData.Nodes}"
                ItemContainerTheme="{StaticResource TreeViewItemSimple}"
                ItemTemplate="{DynamicResource NodeTreeItem}"
                SelectionMode="Multiple"
                Padding="5" />
        </StackPanel>
    </Design.PreviewWith>
    
    
    <TreeDataTemplate x:Key="NodeTreeItem" x:DataType="observers:NodeObserver" ItemsSource="{Binding Nodes}">
        <Border x:Name="Border" Focusable="True" Background="Transparent"
                ContextFlyout="{StaticResource NodeMenu}">

            <Grid ColumnDefinitions="Auto,*">

                <PathIcon Grid.Column="0"
                          Theme="{Binding Icon, Converter={StaticResource KeyToIconConverter}}"
                          Margin="0 0 5 0" />

                <Panel Grid.Column="1">
                    <controls:HighlightableTextBlock
                        Text="{Binding Name}"
                        HighlightedText="{Binding FilterText}"
                        IsVisible="{Binding !IsEditing}" />
                    <TextBox x:Name="NameEntry"
                             Text="{Binding Name, Mode=OneWay}"
                             Watermark="Enter name"
                             IsVisible="{Binding IsEditing}"
                             Theme="{a:ControlTheme TextBoxOutline}"
                             FontSize="{a:ThemeResource DefaultFontSizeSmall}"
                             BorderThickness="0" Padding="5 0 0 0"
                             VerticalContentAlignment="Center"
                             TextWrapping="NoWrap"
                             Focusable="True">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior
                                Binding="{Binding IsEditing}"
                                ComparisonCondition="Equal"
                                Value="True">
                                <FocusControlAction TargetControl="NameEntry" />
                            </DataTriggerBehavior>
                            <SelectAllOnGotFocusBehavior />
                            <ExecuteCommandOnKeyUpBehavior
                                Key="Enter"
                                Command="{Binding RenameCommand}"
                                CommandParameter="{Binding #NameEntry.Text}"
                                FocusControl="border" />
                            <ExecuteCommandOnKeyUpBehavior
                                Key="Escape"
                                Command="{Binding EndEditCommand}"
                                FocusControl="border" />
                            <ExecuteCommandOnLostFocusBehavior
                                Command="{Binding EndEditCommand}"
                                FocusControl="border" />
                        </Interaction.Behaviors>
                    </TextBox>
                </Panel>

            </Grid>

            <Interaction.Behaviors>
                <ItemDragBehavior />
                <ExecuteCommandOnDoubleTappedBehavior
                    Command="{Binding NavigateCommand}" MarkAsHandled="True" />
                <ExecuteCommandOnKeyDownBehavior
                    Key="Enter"
                    Command="{Binding NavigateCommand}" MarkAsHandled="True" />
                <ExecuteCommandOnKeyDownBehavior
                    Key="Delete"
                    Command="{Binding DeleteCommand}" MarkAsHandled="True" />
                <ExecuteCommandOnKeyDownBehavior
                    Gesture="Ctrl+E"
                    Command="{Binding StartEditCommand}" MarkAsHandled="True" />
            </Interaction.Behaviors>
        </Border>
    </TreeDataTemplate>
</ResourceDictionary>
