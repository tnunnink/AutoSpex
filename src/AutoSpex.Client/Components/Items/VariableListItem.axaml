<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:observers="clr-namespace:AutoSpex.Client.Observers"
                    xmlns:components="clr-namespace:AutoSpex.Client.Components"
                    xmlns:properties="clr-namespace:AutoSpex.Client.Resources.Properties"
                    xmlns:controls="clr-namespace:AutoSpex.Client.Resources.Controls"
                    xmlns:engine="clr-namespace:AutoSpex.Engine;assembly=AutoSpex.Engine"
                    xmlns:behaviors="clr-namespace:AutoSpex.Client.Resources.Behaviors">

    <Design.PreviewWith>
        <Border Padding="10" Height="400" Width="800">
            <ListBox ItemsSource="{x:Static components:DesignData.Variables}"
                     ItemTemplate="{DynamicResource VariableListItem}"
                     ItemContainerTheme="{StaticResource ListBoxItemSection}"
                     BorderThickness="1"
                     BorderBrush="{a:ThemeResource Container1BackgroundBrush}"
                     CornerRadius="4" />
        </Border>
    </Design.PreviewWith>

    <DataTemplate x:Key="VariableListItem" x:DataType="observers:VariableObserver">
        <Border x:Name="Border" Focusable="True" Background="Transparent">
            <Border.ContextFlyout>
                <MenuFlyout
                    Placement="Bottom"
                    ItemContainerTheme="{StaticResource MenuActionItem}"
                    ItemsSource="{Binding MenuItems}" />
            </Border.ContextFlyout>

            <Grid ColumnDefinitions="*,Auto">

                <Grid Grid.Column="0" Margin="0 0 10 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="TypeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="NameGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ValueGroup" />
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        Theme="{a:ControlTheme ButtonSubtle}"
                        ToolTip.Tip="{Binding Group}">
                        <StackPanel Orientation="Horizontal" Spacing="7">
                            <PathIcon
                                x:Name="GroupIcon"
                                Theme="{Binding Group, Converter={StaticResource TypeGroupToIconConverter}}" />
                            <TextBlock
                                Text="{Binding Group.Name}"
                                FontFamily="{a:ThemeResource CodeFontFamily}" />
                            <PathIcon Theme="{StaticResource IconChevronExpand}" Classes="size-sm" />
                        </StackPanel>
                        <Button.Flyout>
                            <Flyout Placement="BottomEdgeAlignedLeft" HorizontalOffset="-8" VerticalOffset="2">
                                <ItemsControl
                                    ItemsSource="{x:Static engine:TypeGroup.Selectable}"
                                    CornerRadius="{a:ThemeResource PopupCornerRadius}"
                                    BorderThickness="0" Margin="5"
                                    a:BorderChildClipConverter.ClipToContainingBorder="True">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate x:DataType="engine:TypeGroup">
                                            <Button
                                                x:Name="GroupButton"
                                                Command="{Binding $parent[ListBoxItem].((observers:VariableObserver)DataContext).UpdateGroupCommand, FallbackValue={x:Null}}"
                                                CommandParameter="{Binding }"
                                                Theme="{a:ControlTheme ButtonSubtle}"
                                                HorizontalContentAlignment="Stretch" Padding="5">
                                                <Grid ColumnDefinitions="20,*">
                                                    <PathIcon
                                                        Theme="{Binding Converter={StaticResource TypeGroupToIconConverter}}" />
                                                    <TextBlock
                                                        Grid.Column="1"
                                                        Text="{Binding Name}"
                                                        Foreground="{a:ThemeResource DefaultForegroundBrushSecondary}"
                                                        FontFamily="{a:ThemeResource CodeFontFamily}"
                                                        Margin="10 0" />
                                                </Grid>
                                                <Interaction.Behaviors>
                                                    <behaviors:HideFlyoutOnClickedBehavior />
                                                </Interaction.Behaviors>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <controls:Entry
                        Grid.Column="1"
                        Watermark="Enter name"
                        Value="{Binding Name}"
                        MinDropDownWidth="{Binding $self.Bounds.Width}"
                        IsEmpty="{Binding Name, Converter={x:Static StringConverters.IsNullOrEmpty}}" />

                    <controls:Entry
                        Grid.Column="2"
                        Watermark="Enter value"
                        Value="{Binding Value}"
                        ValueTemplate="{StaticResource ValueTemplates}"
                        ItemTemplate="{StaticResource ValueItemTemplate}"
                        CommitCommand="{Binding UpdateValueCommand}"
                        Populate="{Binding Suggestions}"
                        MinDropDownWidth="{Binding $self.Bounds.Width}">
                        <controls:Entry.IsEmpty>
                            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                <Binding Path="Value" Converter="{x:Static ObjectConverters.IsNull}" />
                                <Binding Path="Value" Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                            </MultiBinding>
                        </controls:Entry.IsEmpty>
                    </controls:Entry>

                </Grid>

                <Button
                    Grid.Column="1"
                    Theme="{StaticResource IconButtonSmall}"
                    properties:Icon.Theme="{StaticResource IconDots}"
                    ToolTip.Placement="BottomEdgeAlignedRight">
                    <Button.Flyout>
                        <MenuFlyout
                            Placement="BottomEdgeAlignedRight" HorizontalOffset="8"
                            ItemsSource="{Binding MenuItems}"
                            ItemContainerTheme="{StaticResource MenuActionItem}" />
                    </Button.Flyout>
                </Button>
            </Grid>

            <Interaction.Behaviors>
                <ExecuteCommandOnKeyDownBehavior
                    Key="Delete" Command="{Binding DeleteCommand}" MarkAsHandled="True" FocusControl="Border" />
                <ExecuteCommandOnKeyDownBehavior
                    Gesture="Ctrl+D" Command="{Binding DuplicateCommand}" MarkAsHandled="True" />
            </Interaction.Behaviors>
        </Border>
    </DataTemplate>
</ResourceDictionary>