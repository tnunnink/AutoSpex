<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:observers="clr-namespace:AutoSpex.Client.Observers"
                    xmlns:components="clr-namespace:AutoSpex.Client.Components"
                    xmlns:properties="clr-namespace:AutoSpex.Client.Resources.Properties"
                    xmlns:controls="clr-namespace:AutoSpex.Client.Resources.Controls"
                    xmlns:shared="clr-namespace:AutoSpex.Client.Shared">

    <Design.PreviewWith>
        <ListBox
            ItemsSource="{x:Static components:TestData.SpecsNodes}"
            ItemContainerTheme="{StaticResource ListBoxItemEntry}"
            ItemTemplate="{DynamicResource NodeListItem}"
            Width="700" Height="250" Margin="10"
            SelectionMode="Multiple"
            Background="{a:ThemeResource Container1BackgroundBrush}" />
    </Design.PreviewWith>

    <DataTemplate x:Key="NodeListItem" x:DataType="observers:NodeObserver">
        <Border x:Name="Border" Focusable="True" Background="Transparent" Padding="5 0">

            <Border.ContextFlyout>
                <MenuFlyout
                    ItemsSource="{Binding ContextItems}"
                    ItemContainerTheme="{StaticResource MenuActionItem}"
                    Placement="Pointer" />
            </Border.ContextFlyout>

            <DockPanel LastChildFill="False">

                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Spacing="5">

                    <PathIcon
                        Theme="{Binding Type.Name, Converter={StaticResource KeyIconConverter}}" />

                    <controls:Entry
                        x:Name="NameEntry"
                        Value="{Binding}"
                        FontFamily="{a:ThemeResource DefaultFontFamily}"
                        CommitCommand="{Binding RenameCommand}"
                        MinDropDownWidth="{Binding #NameEntry.Bounds.Width}"
                        Padding="7 5"
                        HorizontalAlignment="Left">
                        <controls:Entry.ValueTemplate>
                            <DataTemplate x:DataType="shared:Observer">
                                <controls:HighlightableTextBlock
                                    Text="{Binding Name}"
                                    HighlightedText="{Binding FilterText}" />
                            </DataTemplate>
                        </controls:Entry.ValueTemplate>
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{Binding IsNew}" ComparisonCondition="Equal" Value="True">
                                <ChangePropertyAction
                                    TargetObject="NameEntry"
                                    PropertyName="IsDropDownOpen"
                                    Value="True" />
                            </DataTriggerBehavior>
                            <ExecuteCommandOnLostFocusBehavior
                                Command="{Binding ResetIsNewCommand}" />
                        </Interaction.Behaviors>
                    </controls:Entry>

                    <ContentControl
                        Content="{Binding }"
                        ContentTemplate="{StaticResource BreadcrumbLabel}" />

                </StackPanel>

                <StackPanel
                    DockPanel.Dock="Right"
                    Orientation="Horizontal"
                    Spacing="5"
                    IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}">

                    <Button
                        Command="{Binding NavigateCommand}"
                        Theme="{StaticResource IconButtonSmall}"
                        properties:Icon.Theme="{StaticResource IconLineLaunch}"
                        ToolTip.Tip="Open" />

                </StackPanel>

            </DockPanel>

            <Interaction.Behaviors>
                <ExecuteCommandOnKeyDownBehavior
                    Key="Delete"
                    Command="{Binding DeleteSelectedCommand}"
                    MarkAsHandled="True"
                    FocusControl="Border" />
                <ExecuteCommandOnKeyDownBehavior
                    Gesture="Ctrl+D"
                    Command="{Binding DuplicateCommand}"
                    MarkAsHandled="True" />
            </Interaction.Behaviors>
        </Border>
    </DataTemplate>
</ResourceDictionary>