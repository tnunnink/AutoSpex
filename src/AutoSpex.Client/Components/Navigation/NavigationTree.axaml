<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:components="using:AutoSpex.Client.Components"
                    xmlns:properties="clr-namespace:AutoSpex.Client.Resources.Properties"
                    xmlns:engine="clr-namespace:AutoSpex.Engine;assembly=AutoSpex.Engine">

    <Design.PreviewWith>
        <Border Background="{a:ThemeResource Container2BackgroundBrush}"
                MinWidth="300" MinHeight="600">
            <components:NavigationTree Feature="{x:Static engine:NodeType.Spec}"
                                       ItemsSource="{x:Static components:DesignData.Nodes}">

            </components:NavigationTree>
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="{x:Type components:NavigationTree}" TargetType="components:NavigationTree">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="AutoScrollToSelectedItem" Value="True" />

        <Setter Property="Template">
            <ControlTemplate>
                <Border
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid RowDefinitions="Auto, Auto, *">
                        <Border Grid.Row="0"
                                Padding="5" Height="41"
                                BorderThickness="0 0 0 1"
                                BorderBrush="{a:ThemeResource Container1BorderBrush}">
                            <Grid ColumnDefinitions="Auto,*,Auto">
                                <StackPanel Grid.Column="0"
                                            Orientation="Horizontal"
                                            Spacing="5">
                                    <Button
                                        Theme="{StaticResource IconButton}"
                                        properties:ButtonIcon.Theme="{StaticResource IconAdd}"
                                        Foreground="{a:ThemeResource ControlForegroundBrushOutlineAccent}"
                                        ToolTip.Tip="Add Item">
                                        <Button.Flyout>
                                            <MenuFlyout
                                                Placement="BottomEdgeAlignedLeft"
                                                HorizontalOffset="-5"
                                                ShowMode="TransientWithDismissOnPointerMoveAway"
                                                ItemContainerTheme="{StaticResource ContextMenuItem}">
                                                <MenuItem Header="Add Container"
                                                          Command="{Binding $parent[components:NavigationTree].AddContainerCommand}"
                                                          Icon="{StaticResource IconContainerThemed}"
                                                          InputGesture="Ctrl+Shift+N" />
                                                <MenuItem Header="Add Spec"
                                                          Command="{Binding $parent[components:NavigationTree].AddItemCommand}"
                                                          Icon="{StaticResource IconSpecThemed}"
                                                          InputGesture="Shift+N"
                                                          IsVisible="{Binding $parent[components:NavigationTree].Feature,
                                                           Converter={StaticResource EqualToConverter}, 
                                                           ConverterParameter={x:Static engine:NodeType.Spec}}" />
                                                <MenuItem Header="Add Source"
                                                          Command="{TemplateBinding AddItemCommand}"
                                                          Icon="{StaticResource IconSourceThemed}"
                                                          InputGesture="Shift+N"
                                                          IsVisible="{Binding $parent[components:NavigationTree].Feature,
                                                           Converter={StaticResource EqualToConverter}, 
                                                           ConverterParameter={x:Static engine:NodeType.Source}}" />
                                                <MenuItem Header="Add Run"
                                                          Command="{TemplateBinding AddItemCommand}"
                                                          Icon="{StaticResource IconRunThemed}"
                                                          InputGesture="Shift+N"
                                                          IsVisible="{Binding $parent[components:NavigationTree].Feature,
                                                           Converter={StaticResource EqualToConverter}, 
                                                           ConverterParameter={x:Static engine:NodeType.Run}}" />
                                            </MenuFlyout>
                                        </Button.Flyout>
                                    </Button>
                                    <ToggleButton
                                        IsChecked="{Binding IsSearchActive, RelativeSource={RelativeSource TemplatedParent}}"
                                        Theme="{StaticResource IconToggleButton}"
                                        properties:ButtonIcon.Theme="{StaticResource IconFilter}"
                                        Padding="7 8 7 7"
                                        ToolTip.Tip="Filter (Ctrl+F)" />
                                </StackPanel>

                                <StackPanel Grid.Column="2"
                                            Orientation="Horizontal"
                                            Spacing="2">
                                    <Button
                                        Command="{Binding CollapseAllCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        properties:ButtonIcon.Theme="{StaticResource IconChevronCollapse}"
                                        Theme="{StaticResource IconButton}"
                                        Padding="9"
                                        ToolTip.Tip="Collapse All" />
                                    <Button
                                        Command="{Binding ExpandAllCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        properties:ButtonIcon.Theme="{StaticResource IconChevronExpand}"
                                        Theme="{StaticResource IconButton}"
                                        Padding="9"
                                        ToolTip.Tip="Expand All" />
                                    <Button
                                        properties:ButtonIcon.Theme="{StaticResource IconDotsVertical}"
                                        Theme="{StaticResource IconButton}"
                                        Padding="9"
                                        ToolTip.Tip="Options">
                                        <Flyout Placement="BottomEdgeAlignedRight"
                                                HorizontalOffset="8">
                                        </Flyout>
                                    </Button>
                                    <Button
                                        Command="{Binding HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        properties:ButtonIcon.Theme="{StaticResource IconDash}"
                                        Theme="{StaticResource IconButton}"
                                        Padding="9"
                                        ToolTip.Tip="Hide" />
                                </StackPanel>
                            </Grid>
                        </Border>

                        <TextBox
                            x:Name="SearchTextBox"
                            Grid.Row="1"
                            IsVisible="{TemplateBinding IsSearchActive}"
                            Watermark="Filter"
                            Theme="{StaticResource TextBoxSimple}"
                            VerticalContentAlignment="Center"
                            Background="{a:ThemeResource Container1BackgroundBrush}"
                            BorderBrush="{a:ThemeResource Container1BorderBrush}"
                            Padding="0 5" BorderThickness="0 0 0 1" CornerRadius="0" Height="36">
                            <TextBox.InnerLeftContent>
                                <PathIcon Theme="{StaticResource IconFilter}"
                                          VerticalAlignment="Center" Padding="8" Margin="3 0"
                                          Foreground="{a:ThemeResource DefaultForegroundBrushTertiary}" />
                            </TextBox.InnerLeftContent>
                            <Interaction.Behaviors>
                                <DataTriggerBehavior
                                    Binding="{Binding IsSearchActive, RelativeSource={RelativeSource TemplatedParent}}"
                                    ComparisonCondition="Equal"
                                    Value="True">
                                    <FocusControlAction TargetControl="SearchTextBox" />
                                </DataTriggerBehavior>
                                <SelectAllOnGotFocusBehavior />
                            </Interaction.Behaviors>
                        </TextBox>

                        <ScrollViewer Grid.Row="2"
                                      x:Name="PART_ScrollViewer"
                                      AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                      Theme="{a:ControlTheme ScrollViewerOverlay}"
                                      Background="{TemplateBinding Background}"
                                      HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                      IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                      IsScrollInertiaEnabled="{TemplateBinding (ScrollViewer.IsScrollInertiaEnabled)}"
                                      VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                      VerticalSnapPointsType="{TemplateBinding (ScrollViewer.VerticalSnapPointsType)}"
                                      HorizontalSnapPointsType="{TemplateBinding (ScrollViewer.HorizontalSnapPointsType)}"
                                      a:ThemeProperties.CopyClassesFilter="theme-scroll-.*"
                                      a:ThemeProperties.CopyClassesFrom="{TemplateBinding}"
                                      a:ThemeProperties.ScrollBarHasLineButtons="{TemplateBinding a:ThemeProperties.ScrollBarHasLineButtons}">
                            <ItemsPresenter
                                x:Name="PART_ItemsPresenter"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                KeyboardNavigation.TabNavigation="{TemplateBinding KeyboardNavigation.TabNavigation}"
                                Margin="{TemplateBinding Padding}" />
                        </ScrollViewer>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
</ResourceDictionary>