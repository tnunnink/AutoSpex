<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:observers="clr-namespace:AutoSpex.Client.Observers"
                    xmlns:components="clr-namespace:AutoSpex.Client.Components"
                    xmlns:engine="clr-namespace:AutoSpex.Engine;assembly=AutoSpex.Engine">

    <Design.PreviewWith>
        <Border Padding="30" Height="500" Width="800">
            <StackPanel Spacing="30">
                <ContentControl Content="{x:Static components:DesignData.SpecObserver}"
                                ContentTemplate="{DynamicResource SpecQuery}" />
                <ContentControl Content="{x:Static components:DesignData.SpecObserver}"
                                ContentTemplate="{DynamicResource SpecSettings}" />
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <DataTemplate x:Key="SpecQuery" x:DataType="observers:SpecObserver">
        <components:Section>
            <components:Section.Header>
                <Grid ColumnDefinitions="Auto,*,Auto">
                    <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="10" Margin="10 0">
                        <TextBlock Text="Query"
                                   FontWeight="{a:ThemeResource HeadingFontWeightMedium}" />
                        <PathIcon Theme="{StaticResource IconInfoOutline}"
                                  Margin="0 1 0 0"
                                  ToolTip.Tip="Configure what data this specification will query." />
                    </StackPanel>

                    <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="5">

                    </StackPanel>
                </Grid>
            </components:Section.Header>

            <StackPanel>
                <components:SettingItem BorderThickness="0" Label="Element"
                                        InfoText="Select the element type to query when this spec is run.">
                    <DropDownButton
                        MinWidth="100"
                        Margin="10 0"
                        Theme="{a:ControlTheme DropDownButtonOutline}"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Classes.accent="{Binding Element, Converter={StaticResource NotEqualToConverter}, ConverterParameter={x:Static engine:Element.Default}}"
                        Content="{Binding Element}">
                        <DropDownButton.Flyout>
                            <Flyout Placement="BottomEdgeAlignedRight" HorizontalOffset="8">
                                <components:ElementList Element="{Binding Element}" />
                            </Flyout>
                        </DropDownButton.Flyout>
                    </DropDownButton>
                </components:SettingItem>
            </StackPanel>
        </components:Section>
    </DataTemplate>

    <DataTemplate x:Key="SpecSettings" x:DataType="observers:SpecObserver">
        <components:Section>
            <components:Section.Header>
                <Grid ColumnDefinitions="Auto,*,Auto">
                    <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="10" Margin="10 0">
                        <TextBlock Text="Range"
                                   FontWeight="{a:ThemeResource HeadingFontWeightMedium}"
                                   Classes="theme-text-heading size-xs" />
                        <PathIcon Theme="{StaticResource IconInfoOutline}"
                                  Margin="0 1 0 0"
                                  ToolTip.Tip="Configure expected candidate range as a special validation" />
                    </StackPanel>

                    <ToggleSwitch
                        x:Name="VerifyCountToggle"
                        Grid.Column="2"
                        IsChecked="{Binding VerifyCount}"
                        Theme="{a:ControlTheme ToggleSwitchSolid}"
                        Margin="10"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Classes="accent size-sm"
                        OffContent="{x:Null}" OnContent="{x:Null}" />
                </Grid>
            </components:Section.Header>

            <StackPanel IsVisible="{Binding #VerifyCountToggle.IsChecked}">
                <components:SettingItem Label="Operation"
                                        InfoText="The operation used to evaluate the candidate range.">
                    <ComboBox
                        ItemsSource="{x:Static engine:Operation.List}"
                        SelectedItem="{Binding CountOperation}"
                        Theme="{a:ControlTheme ComboBoxOutline}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="10 0"
                        PlaceholderText="Select Operation" />
                </components:SettingItem>

                <components:SettingItem BorderThickness="0" Label="Value"
                                        InfoText="The value used to evaluate the candidate range.">
                    <NumericUpDown
                        VerticalAlignment="Center"
                        Value="{Binding CountValue}"
                        FormatString="0"
                        Margin="10 0" />
                </components:SettingItem>
            </StackPanel>
        </components:Section>
    </DataTemplate>
</ResourceDictionary>