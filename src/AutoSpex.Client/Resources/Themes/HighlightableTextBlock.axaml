<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:controls="using:AutoSpex.Client.Resources.Controls">

    <Design.PreviewWith>
        <StackPanel Margin="20" Spacing="10">
            <a:ToggleThemeButton
                Theme="{a:ControlTheme TitleBarToggleThemeButton}" />
            <controls:HighlightableTextBlock Text="This is a test" HighlightedText="test" ToolTip.Tip="This is a test" />
            <controls:HighlightableTextBlock Text="This is a another test" HighlightedText="another" />
            <controls:HighlightableTextBlock Text="This is a test" />
        </StackPanel>
    </Design.PreviewWith>

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Light">
            <SolidColorBrush x:Key="HighlightTextBackgroundBrush" Color="#9ee5ff" />
            <SolidColorBrush x:Key="HighlightTextForegroundBrush" Color="#ff6402" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
            <SolidColorBrush x:Key="HighlightTextBackgroundBrush" Color="#2d687d" />
            <SolidColorBrush x:Key="HighlightTextForegroundBrush" Color="#ffb641" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <ControlTheme x:Key="{x:Type controls:HighlightableTextBlock}" TargetType="controls:HighlightableTextBlock">
        <!--<Setter Property="SelectionBrush" Value="{DynamicResource HighlightTextBackgroundBrush}" />-->
        <Setter Property="SelectionForegroundBrush" Value="{DynamicResource HighlightTextForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="(ToolTip.ShowOnDisabled)" Value="True"></Setter>

        <Setter Property="IsEnabled" Value="False" />

        <Style Selector="^[IsEnabled=True]">
            <Setter Property="ContextFlyout">
                <MenuFlyout Placement="Bottom">
                    <MenuItem x:Name="SelectableTextBlockContextFlyoutCopyItem"
                              Header="Copy"
                              Command="{Binding $parent[SelectableTextBlock].Copy}"
                              IsEnabled="{Binding $parent[SelectableTextBlock].CanCopy}"
                              InputGesture="{x:Static TextBox.CopyGesture}" />
                </MenuFlyout>
            </Setter>
            <Setter Property="Cursor" Value="IBeam" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.size-xs">
            <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeExtraSmall}" />
        </Style>
        <Style Selector="^.size-sm">
            <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeSmall}" />
        </Style>
        <Style Selector="^.size-md">
            <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeMedium}" />
        </Style>
        <Style Selector="^.size-lg">
            <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeLarge}" />
        </Style>
        <Style Selector="^.size-xl">
            <Setter Property="FontSize" Value="{a:ThemeResource DefaultFontSizeExtraLarge}" />
        </Style>

        <!-- Semantic variants -->
        <Style Selector="^.accent">
            <Setter Property="Foreground" Value="{a:ThemeResource ControlForegroundBrushOutlineAccent}" />
        </Style>
        <Style Selector="^.danger">
            <Setter Property="Foreground" Value="{a:ThemeResource ControlForegroundBrushOutlineDanger}" />
        </Style>
        <Style Selector="^.success">
            <Setter Property="Foreground" Value="{a:ThemeResource ControlForegroundBrushOutlineSuccess}" />
        </Style>
        <Style Selector="^.warning">
            <Setter Property="Foreground" Value="{a:ThemeResource ControlForegroundBrushOutlineWarning}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>