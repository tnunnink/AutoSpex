<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui">
    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Spacing="20">
                <TextBox Theme="{DynamicResource TextBoxSubtle}"
                         Watermark="Really long water mark does this expand the border"

                         MaxWidth="200"
                         HorizontalContentAlignment="Left" />
                <TextBox Theme="{DynamicResource TextBoxOutlineHighlight}"
                         Watermark="Label"
                         MinWidth="100"
                         BorderThickness="1" />
                <TextBox Theme="{DynamicResource TextBoxOutlineHighlight}"
                         Watermark="Label"
                         MinWidth="100"
                         BorderThickness="1">
                </TextBox>
                <TextBox Theme="{DynamicResource TextBoxSubtle}"
                         Watermark="Label"
                         MinWidth="100" />
                <TextBox Theme="{DynamicResource TextBoxSubtle}"
                         Text="This is the value"
                         Watermark="Label"
                         MinWidth="100" />
                <TextBox Theme="{DynamicResource TextBoxSubtle}"
                         IsEnabled="False"
                         Text="This is the value"
                         Watermark="Label"
                         MinWidth="100" />
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <!-- TextBoxSubtle -->
    <ControlTheme x:Key="TextBoxSubtle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{a:ThemeResource EditForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{a:ThemeResource EditForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{a:ThemeResource EditSelectionBackgroundBrush}" />
        <Setter Property="SelectionForegroundBrush" Value="{a:ThemeResource EditSelectionForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{a:ThemeResource ButtonBorderThickness}" />
        <Setter Property="CornerRadius" Value="{a:ThemeResource ButtonCornerRadius}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{a:ThemeResource ButtonPadding}" />
        <Setter Property="(Interaction.Behaviors)">
            <BehaviorCollectionTemplate>
                <BehaviorCollection>
                    <SelectAllOnGotFocusBehavior />
                </BehaviorCollection>
            </BehaviorCollectionTemplate>
        </Setter>

        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel>
                    <TextBlock
                        DockPanel.Dock="Top"
                        Theme="{a:ControlTheme TextBlockFormControlLabel}"
                        IsVisible="{TemplateBinding UseFloatingWatermark}"
                        Text="{TemplateBinding Watermark}" />
                    <DataValidationErrors>
                        <Panel>
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                TemplatedControl.IsTemplateFocusTarget="True">
                                <a:MeasureAdjuster VerticalRoundMode="CeilingToEven">
                                    <Grid
                                        ColumnDefinitions="Auto,*,Auto"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        a:BorderChildClipConverter.ClipToContainingBorder="True">

                                        <ContentPresenter Content="{TemplateBinding InnerLeftContent}"
                                                          IsVisible="{TemplateBinding InnerLeftContent, Converter={x:Static ObjectConverters.IsNotNull}}" />

                                        <Panel Grid.Column="1"
                                               Margin="{TemplateBinding Padding}">
                                            <TextBlock
                                                x:Name="watermark"
                                                FontStyle="Italic"
                                                Opacity="{DynamicResource {a:ThemeResourceKey EditWatermarkOpacity}}"
                                                Text="{TemplateBinding Watermark}"
                                                TextAlignment="{TemplateBinding TextAlignment}"
                                                TextWrapping="{TemplateBinding TextWrapping}">
                                                <TextBlock.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Path="!UseFloatingWatermark"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Text"
                                                                 RelativeSource="{RelativeSource TemplatedParent}"
                                                                 Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                                                    </MultiBinding>
                                                </TextBlock.IsVisible>
                                                <TextBlock.Transitions>
                                                    <Transitions>
                                                        <DoubleTransition Property="Opacity"
                                                                          Duration="{a:AnimationSetting SubtleAnimationDuration}" />
                                                    </Transitions>
                                                </TextBlock.Transitions>
                                            </TextBlock>

                                            <TextPresenter
                                                x:Name="PART_TextPresenter"
                                                CaretBrush="{TemplateBinding CaretBrush}"
                                                CaretIndex="{TemplateBinding CaretIndex}"
                                                LineHeight="{TemplateBinding LineHeight}"
                                                LetterSpacing="{TemplateBinding LetterSpacing}"
                                                PasswordChar="{TemplateBinding PasswordChar}"
                                                RevealPassword="{TemplateBinding RevealPassword}"
                                                SelectionBrush="{TemplateBinding SelectionBrush}"
                                                SelectionEnd="{TemplateBinding SelectionEnd}"
                                                SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                                SelectionStart="{TemplateBinding SelectionStart}"
                                                Text="{TemplateBinding Text, Mode=TwoWay}"
                                                TextAlignment="{TemplateBinding TextAlignment}"
                                                TextWrapping="{TemplateBinding TextWrapping}">
                                            </TextPresenter>
                                        </Panel>

                                        <ContentPresenter Grid.Column="2" Content="{TemplateBinding InnerRightContent}"
                                                          IsVisible="{TemplateBinding InnerRightContent, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                    </Grid>
                                </a:MeasureAdjuster>
                            </Border>

                            <Border x:Name="focus"
                                    BorderThickness="{a:ThemeResource FocusAdornerBorderThickness}"
                                    BorderBrush="{a:ThemeResource ControlForegroundBrushOutlineAccent}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Opacity="0">
                                <Border.Transitions>
                                    <Transitions>
                                        <DoubleTransition Property="Opacity" Duration="0:0:0.1" />
                                    </Transitions>
                                </Border.Transitions>
                            </Border>
                        </Panel>
                    </DataValidationErrors>
                </DockPanel>
            </ControlTemplate>
        </Setter>
        
        <Style Selector="^[IsReadOnly=True] /template/ Border#border">
            <Setter Property="TextElement.Foreground" Value="{a:ThemeResource EditForegroundBrushReadOnly}" />
        </Style>
        <Style Selector="^:disabled /template/ Border#border">
            <Setter Property="Background" Value="{a:ThemeResource EditBackgroundBrushSoftDisabled}" />
            <Setter Property="BorderBrush" Value="{a:ThemeResource EditBackgroundBrushSoftDisabled}" />
            <Setter Property="TextElement.Foreground" Value="{a:ThemeResource EditForegroundBrushDisabled}" />
        </Style>
        <Style Selector="^:pointerover /template/ Border#border">
            <Setter Property="Background" Value="{a:ThemeResource ControlBackgroundBrushSoftPointerOver}" />
            <Setter Property="BorderBrush" Value="{a:ThemeResource ControlBackgroundBrushSoftPointerOver}" />
        </Style>
        <Style Selector="^:focus">
            <Style Selector="^ /template/ Border#border">
                <Setter Property="Background" Value="{a:ThemeResource ControlBackgroundBrushOutline}" />
            </Style>
            <Style Selector="^ /template/ Border#focus">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <Style Selector="^.error">
            <Setter Property="Background" Value="{a:ThemeResource ControlBackgroundBrushSoftDanger}" />
            <Setter Property="BorderBrush" Value="{a:ThemeResource ControlBackgroundBrushSoftDanger}" />
            <Setter Property="Foreground" Value="{a:ThemeResource ControlForegroundBrushSoftDanger}" />

            <Style Selector="^[IsReadOnly=True] /template/ Border#border">
                <Setter Property="TextElement.Foreground"
                        Value="{a:ThemeResource ControlForegroundBrushSoftDangerReadOnly}" />
            </Style>
            <Style Selector="^:disabled /template/ Border#border">
                <Setter Property="Background" Value="{a:ThemeResource ControlBackgroundBrushSoftDangerDisabled}" />
                <Setter Property="BorderBrush" Value="{a:ThemeResource ControlBackgroundBrushSoftDangerDisabled}" />
                <Setter Property="TextElement.Foreground"
                        Value="{a:ThemeResource ControlForegroundBrushSoftDangerDisabled}" />
            </Style>
        </Style>
    </ControlTheme>

    <!-- TextBoxOutlineHighlight -->
    <ControlTheme x:Key="TextBoxOutlineHighlight" TargetType="TextBox" BasedOn="{a:ControlTheme TextBoxOutline}">
        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel>
                    <TextBlock
                        DockPanel.Dock="Top"
                        Theme="{a:ControlTheme TextBlockFormControlLabel}"
                        IsVisible="{TemplateBinding UseFloatingWatermark}"
                        Text="{TemplateBinding Watermark}" />

                    <DataValidationErrors>
                        <Panel>
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                TemplatedControl.IsTemplateFocusTarget="True">
                                <a:MeasureAdjuster VerticalRoundMode="CeilingToEven">
                                    <Grid
                                        ColumnDefinitions="Auto,*,Auto"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        a:BorderChildClipConverter.ClipToContainingBorder="True">
                                        <ContentPresenter Content="{TemplateBinding InnerLeftContent}"
                                                          IsVisible="{TemplateBinding InnerLeftContent, Converter={x:Static ObjectConverters.IsNotNull}}" />

                                        <ScrollViewer
                                            x:Name="PART_ScrollViewer"
                                            Grid.Column="1"
                                            AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                            Cursor="Ibeam"
                                            HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                            IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                            IsScrollInertiaEnabled="{TemplateBinding (ScrollViewer.IsScrollInertiaEnabled)}"
                                            VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                            a:ThemeProperties.ScrollBarHasLineButtons="{TemplateBinding a:ThemeProperties.ScrollBarHasLineButtons}">
                                            <Panel Margin="{TemplateBinding Padding}">
                                                <TextBlock
                                                    x:Name="watermark"
                                                    FontStyle="Italic"
                                                    Opacity="{DynamicResource {a:ThemeResourceKey EditWatermarkOpacity}}"
                                                    Text="{TemplateBinding Watermark}"
                                                    TextAlignment="{TemplateBinding TextAlignment}"
                                                    TextWrapping="{TemplateBinding TextWrapping}">
                                                    <TextBlock.IsVisible>
                                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                            <Binding Path="!UseFloatingWatermark"
                                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding Path="Text"
                                                                     RelativeSource="{RelativeSource TemplatedParent}"
                                                                     Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                                                        </MultiBinding>
                                                    </TextBlock.IsVisible>
                                                    <TextBlock.Transitions>
                                                        <Transitions>
                                                            <DoubleTransition Property="Opacity"
                                                                              Duration="{a:AnimationSetting SubtleAnimationDuration}" />
                                                        </Transitions>
                                                    </TextBlock.Transitions>
                                                </TextBlock>

                                                <TextPresenter
                                                    x:Name="PART_TextPresenter"
                                                    CaretBrush="{TemplateBinding CaretBrush}"
                                                    CaretIndex="{TemplateBinding CaretIndex}"
                                                    LineHeight="{TemplateBinding LineHeight}"
                                                    LetterSpacing="{TemplateBinding LetterSpacing}"
                                                    PasswordChar="{TemplateBinding PasswordChar}"
                                                    RevealPassword="{TemplateBinding RevealPassword}"
                                                    SelectionBrush="{TemplateBinding SelectionBrush}"
                                                    SelectionEnd="{TemplateBinding SelectionEnd}"
                                                    SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                                    SelectionStart="{TemplateBinding SelectionStart}"
                                                    Text="{TemplateBinding Text, Mode=TwoWay}"
                                                    TextAlignment="{TemplateBinding TextAlignment}"
                                                    TextWrapping="{TemplateBinding TextWrapping}" />
                                            </Panel>
                                        </ScrollViewer>

                                        <ContentPresenter Grid.Column="2" Content="{TemplateBinding InnerRightContent}"
                                                          IsVisible="{TemplateBinding InnerRightContent, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                    </Grid>
                                </a:MeasureAdjuster>
                            </Border>

                            <Border Name="focus"
                                    BorderThickness="{a:ThemeResource FocusAdornerBorderThickness}"
                                    BorderBrush="{a:ThemeResource ControlForegroundBrushOutlineAccent}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Opacity="0">
                                <Border.Transitions>
                                    <Transitions>
                                        <DoubleTransition Property="Opacity" Duration="0:0:0.3" />
                                    </Transitions>
                                </Border.Transitions>
                            </Border>
                        </Panel>
                    </DataValidationErrors>
                </DockPanel>

            </ControlTemplate>
        </Setter>

        <!-- Focused State -->
        <Style Selector="^:focus">
            <Style Selector="^ /template/ Border#focus">
                <Setter Property="Opacity" Value="1" />
            </Style>
            <!--<Style Selector="^ /template/ Border#border">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>-->
        </Style>
    </ControlTheme>

</ResourceDictionary>