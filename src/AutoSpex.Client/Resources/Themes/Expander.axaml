<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:a="http://schemas.actiprosoftware.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:AutoSpex.Client.Resources.Properties">

    <Design.PreviewWith>

        <Border Height="300" Width="300">
            <Expander Theme="{DynamicResource ExpanderSimple}" Margin="20">
                <Expander.Header>
                    <Border Padding="10">
                        <Grid ColumnDefinitions="*,Auto">


                            <TextBlock>
                                this is the header
                            </TextBlock>

                            <Button
                                Grid.Column="1"
                                Theme="{StaticResource IconButton}"
                                properties:Icon.Theme="{StaticResource IconEllipsis}"
                                Content=" test"
                                HorizontalAlignment="Right">
                            </Button>
                        </Grid>
                    </Border>

                </Expander.Header>
                This is the content of the expander
            </Expander>
        </Border>
    </Design.PreviewWith>

    <!-- ExpanderToggleButtonSimple -->
    <ControlTheme x:Key="ExpanderToggleButtonSimple" TargetType="ToggleButton">
        <ControlTheme.Resources>
            <a:ThicknessConverter x:Key="HeaderPaddingThicknessConverter" Filter="Left,Top,Bottom" />
        </ControlTheme.Resources>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{a:ThemeResource ExpanderHeaderForegroundBrush}" />
        <Setter Property="Padding" Value="{a:ThemeResource ExpanderHeaderPadding}" />

        <Setter Property="Template">
            <ControlTemplate>
                <Border
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Padding="{TemplateBinding Padding, Converter={StaticResource HeaderPaddingThicknessConverter}}">
                    <ContentPresenter
                        x:Name="PART_ContentPresenter"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        RecognizesAccessKey="True"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ Border#border">
            <Setter Property="Background"
                    Value="{a:ThemeResource ButtonBackgroundBrushOutlinePointerOver}" />
            <Setter Property="TextElement.Foreground"
                    Value="{a:ThemeResource ButtonForegroundBrushLinkPointerOver}" />
        </Style>
        <Style Selector="^:pressed /template/ Border#border">
            <Setter Property="TextElement.Foreground" Value="{a:ThemeResource ExpanderHeaderForegroundBrushPressed}" />
        </Style>
        <Style Selector="^:disabled /template/ Border#border">
            <Setter Property="TextElement.Foreground" Value="{a:ThemeResource ExpanderHeaderForegroundBrushDisabled}" />
        </Style>

    </ControlTheme>

    <!-- Expander -->
    <ControlTheme x:Key="ExpanderSimple" TargetType="Expander">
        <Setter Property="Background" Value="{a:ThemeResource Container1BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{a:ThemeResource ExpanderBorderBrush}" />
        <Setter Property="BorderThickness" Value="{a:ThemeResource ExpanderBorderThickness}" />
        <Setter Property="CornerRadius" Value="{a:ThemeResource ExpanderCornerRadius}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="{a:ThemeResource ExpanderPadding}" />

        <Setter Property="Template">
            <ControlTemplate>

                <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                    <DockPanel a:BorderChildClipConverter.ClipToContainingBorder="True">
                        <ToggleButton
                            x:Name="headerButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}"
                            Theme="{StaticResource ExpanderToggleButtonSimple}"
                            a:ThemeProperties.CopyClassesFrom="{TemplateBinding}"
                            a:ThemeProperties.IsAnimationEnabled="{Binding #expanderDecorator.IsAnimationEnabled}" />

                        <a:AnimatedExpanderDecorator
                            x:Name="expanderDecorator"
                            IsExpanded="{TemplateBinding IsExpanded}"
                            IsAnimationEnabled="{TemplateBinding a:ThemeProperties.IsAnimationEnabled}">
                            <ContentPresenter
                                x:Name="PART_ContentPresenter"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Padding="{TemplateBinding Padding}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </a:AnimatedExpanderDecorator>
                    </DockPanel>
                </Border>

            </ControlTemplate>
        </Setter>

        <Style Selector="^:left">
            <Setter Property="HorizontalAlignment" Value="Right" />

            <Style Selector="^ /template/ ToggleButton#headerButton">
                <Setter Property="DockPanel.Dock" Value="Right" />
                <Setter Property="Theme" Value="{a:ControlTheme ExpanderToggleButtonLeft}" />
            </Style>
            <Style Selector="^ /template/ a|AnimatedExpanderDecorator#expanderDecorator">
                <Setter Property="ExpandDirection" Value="Left" />
            </Style>
        </Style>
        <Style Selector="^:up">
            <Setter Property="VerticalAlignment" Value="Bottom" />

            <Style Selector="^ /template/ ToggleButton#headerButton">
                <Setter Property="DockPanel.Dock" Value="Bottom" />
                <Setter Property="Theme" Value="{a:ControlTheme ExpanderToggleButtonUp}" />
            </Style>
            <Style Selector="^ /template/ a|AnimatedExpanderDecorator#expanderDecorator">
                <Setter Property="ExpandDirection" Value="Up" />
            </Style>
        </Style>
        <Style Selector="^:right">
            <Setter Property="HorizontalAlignment" Value="Left" />

            <Style Selector="^ /template/ ToggleButton#headerButton">
                <Setter Property="DockPanel.Dock" Value="Left" />
                <Setter Property="Theme" Value="{a:ControlTheme ExpanderToggleButtonRight}" />
            </Style>
            <Style Selector="^ /template/ a|AnimatedExpanderDecorator#expanderDecorator">
                <Setter Property="ExpandDirection" Value="Right" />
            </Style>
        </Style>
        <Style Selector="^:down">
            <Setter Property="VerticalAlignment" Value="Top" />

            <Style Selector="^ /template/ ToggleButton#headerButton">
                <Setter Property="DockPanel.Dock" Value="Top" />
            </Style>
            <Style Selector="^ /template/ a|AnimatedExpanderDecorator#expanderDecorator">
                <Setter Property="ExpandDirection" Value="Down" />
            </Style>
        </Style>

        <Style Selector="^:expanded">
            <Style Selector="^:left /template/ ToggleButton#headerButton">
                <Style.Resources>
                    <a:ThicknessConverter x:Key="ThicknessConverter" Filter="Left" />
                </Style.Resources>

                <Setter Property="BorderThickness"
                        Value="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessConverter}}" />
            </Style>
            <Style Selector="^:up /template/ ToggleButton#headerButton">
                <Style.Resources>
                    <a:ThicknessConverter x:Key="ThicknessConverter" Filter="Top" />
                </Style.Resources>

                <Setter Property="BorderThickness"
                        Value="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessConverter}}" />
            </Style>
            <Style Selector="^:right /template/ ToggleButton#headerButton">
                <Style.Resources>
                    <a:ThicknessConverter x:Key="ThicknessConverter" Filter="Right" />
                </Style.Resources>

                <Setter Property="BorderThickness"
                        Value="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessConverter}}" />
            </Style>
            <Style Selector="^:down /template/ ToggleButton#headerButton">
                <Style.Resources>
                    <a:ThicknessConverter x:Key="ThicknessConverter" Filter="Bottom" />
                </Style.Resources>

                <Setter Property="BorderThickness"
                        Value="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessConverter}}" />
            </Style>
        </Style>
    </ControlTheme>

</ResourceDictionary>