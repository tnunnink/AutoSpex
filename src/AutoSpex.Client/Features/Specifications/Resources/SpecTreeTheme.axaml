<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avConverters="using:Avalonia.Controls.Converters"
                    xmlns:controls="using:ActiproSoftware.UI.Avalonia.Controls"
                    xmlns:converters="using:ActiproSoftware.UI.Avalonia.Controls.Converters"
                    xmlns:markup="using:ActiproSoftware.UI.Avalonia.Markup.Xaml"
                    xmlns:themes="using:ActiproSoftware.UI.Avalonia.Themes">

  <Design.PreviewWith>
    <Border Padding="50">
      <TreeView HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Height="500" Width="300"
                ItemContainerTheme="{DynamicResource SpexTreeViewItem}">
        <TreeViewItem Header="Collection Name">
          <TreeViewItem Header="Folder 1">
            <TreeViewItem Header="Spec 1" />
            <TreeViewItem Header="Spec 2" />
            <TreeViewItem Header="Spec 3" />
          </TreeViewItem>
          <TreeViewItem Header="Folder 2">
            <TreeViewItem Header="Spec 1" />
            <TreeViewItem Header="Spec 2" />
          </TreeViewItem>
          <TreeViewItem Header="Folder 3">
            <TreeViewItem Header="Spec 1" />
            <TreeViewItem Header="Spec 2" />
            <TreeViewItem Header="Spec 3" />
          </TreeViewItem>
        </TreeViewItem>
        <TreeViewItem Header="Another Collection" />
      </TreeView>
    </Border>
  </Design.PreviewWith>

  <!-- SpexTreeViewItem -->
  <ControlTheme x:Key="SpexTreeViewItem" 
                TargetType="TreeViewItem"
                BasedOn="{markup:ControlTheme TreeViewItem}">
    <ControlTheme.Resources>
      <avConverters:MarginMultiplierConverter x:Key="LeftMarginConverter"
                                              Indent="{StaticResource {markup:ThemeResourceKey TreeItemIndent}}"
                                              Left="True" />
      <converters:ThicknessConverter x:Key="PaddingConverter" Filter="Top, Right, Bottom" />
    </ControlTheme.Resources>

    <Setter Property="Template">
      <ControlTemplate>
        <StackPanel>
          <Panel>
            <Border
              x:Name="border"
              MinHeight="{TemplateBinding MinHeight}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}"
              TemplatedControl.IsTemplateFocusTarget="True">
              <Grid Name="PART_Header" Margin="{TemplateBinding Level, Converter={StaticResource LeftMarginConverter}}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="{StaticResource {markup:ThemeResourceKey TreeItemIndent}}" Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ToggleButton IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}"
                              Theme="{markup:ControlTheme TreeViewItemToggleButton}" />

                <ContentPresenter
                  x:Name="PART_HeaderPresenter"
                  Grid.Column="1"
                  Background="Transparent"
                  Content="{TemplateBinding Header}"
                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                  Padding="{TemplateBinding Padding, Converter={StaticResource PaddingConverter}}"
                  VerticalAlignment="Center" />
              </Grid>
            </Border>
            <Border x:Name="selected"
                    BorderThickness="3 0 0 0"
                    IsVisible="False"
                    BorderBrush="BlueViolet" />
          </Panel>

          <controls:AnimatedExpanderDecorator
            x:Name="expanderDecorator"
            IsExpanded="{TemplateBinding IsExpanded}"
            IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}">
            <ItemsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" />
          </controls:AnimatedExpanderDecorator>
        </StackPanel>

      </ControlTemplate>
    </Setter>
    
    <Style Selector="^:selected /template/ Border#selected">
      <Setter Property="IsVisible" Value="True" />
    </Style>
  </ControlTheme>
</ResourceDictionary>